{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStackMooc\\\\osa5\\\\bloglist-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport './styles.css';\nimport Alert from '@mui/material/Alert';\nimport LoginForm from './components/loginForm';\nimport Togglable from './components/togglable';\nimport BlogForm from './components/blogForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [newBlog, setNewBlog] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null); // sisältää kirjautuneen käyttäjän tiedot\n\n  const [successVisible, setSuccessVisible] = useState(false);\n  const [loginVisible, setLoginVisible] = useState(false);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  // prevent default estää, että koodia ei ajeta joka kerta kun input kentän tila muuttuu\n  const handleLogin = async event => {\n    event.preventDefault();\n    // tässä loginservicen loginille lähetetään nimi ja salasana jotka myöhemmin niemtään credentialseiksi\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n\n      // istunto ei keskeydy vaikka uudelleenladataan sivu\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n\n      // tällä voit kirjautua ulos: window.localStorage.removeItem('loggedNoteappUser') konsoliin\n\n      setUser(user);\n      setUsername(''); // tyhjentää input-kentät\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n    console.log('logging in with', username, password);\n  };\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogappUser');\n    setUser(null);\n  };\n  const addLike = async (id, blog) => {\n    const res = await blogService.save(id, blog);\n    setBlogs(blogs.map(blog => blog !== res ? blog : res).sort((a, b) => b.likes - a.likes));\n  };\n  const removeBlog = async id => {\n    await blogService.remove(id);\n    setBlogs(blogs.filter(blog => blog.id !== id));\n  };\n\n  //kaksi eri errormessage tapaa, MUI ja pelkkä message\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [successVisible && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      children: \"New blog added succesfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), errorMessage, /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), !user && /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"log in\",\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        username: username,\n        password: password,\n        setUsername: setUsername,\n        setPassword: setPassword,\n        handleLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BlogForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"logged in as \", user.username, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        user: user.username,\n        addLike: addLike,\n        removeBlog: removeBlog\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 26\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sqcjliBEvbqsWCscIcIpb/c2UqM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Blog","blogService","loginService","Alert","LoginForm","Togglable","BlogForm","App","blogs","setBlogs","newBlog","setNewBlog","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","successVisible","setSuccessVisible","loginVisible","setLoginVisible","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","exception","setTimeout","console","log","handleLogout","removeItem","addLike","id","blog","res","save","map","sort","a","b","likes","removeBlog","remove","filter"],"sources":["C:/FullStackMooc/osa5/bloglist-frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport './styles.css';\r\nimport Alert from '@mui/material/Alert';\r\nimport LoginForm from './components/loginForm';\r\nimport Togglable from './components/togglable';\r\nimport BlogForm from './components/blogForm';\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [newBlog, setNewBlog] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null) // sisältää kirjautuneen käyttäjän tiedot\r\n\r\n  const [successVisible, setSuccessVisible] = useState(false)\r\n  const [loginVisible, setLoginVisible] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs(blogs)\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  // prevent default estää, että koodia ei ajeta joka kerta kun input kentän tila muuttuu\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n  // tässä loginservicen loginille lähetetään nimi ja salasana jotka myöhemmin niemtään credentialseiksi\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      // istunto ei keskeydy vaikka uudelleenladataan sivu\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      )\r\n\r\n      // tällä voit kirjautua ulos: window.localStorage.removeItem('loggedNoteappUser') konsoliin\r\n\r\n      setUser(user)\r\n      setUsername('') // tyhjentää input-kentät\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n    console.log('logging in with', username, password)\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    setUser(null)\r\n  }\r\n\r\n\r\n  const addLike = async (id, blog) => {\r\n    const res = await blogService.save(id, blog)\r\n    setBlogs(blogs\r\n      .map(blog => blog !== res ? blog : res)\r\n      .sort((a,b) => b.likes - a.likes)\r\n    )\r\n  }\r\n\r\n  const removeBlog = async id => {\r\n    await blogService.remove(id)\r\n    setBlogs(blogs.filter(blog => blog.id !== id))\r\n  }\r\n\r\n\r\n  //kaksi eri errormessage tapaa, MUI ja pelkkä message\r\n  return (\r\n    <div>\r\n\r\n      {successVisible && (\r\n        <Alert severity=\"success\">\r\n          New blog added succesfully!\r\n        </Alert>\r\n      )}\r\n\r\n      {errorMessage}\r\n\r\n      <h1>Blogs</h1>\r\n\r\n\r\n      {!user &&\r\n        <Togglable buttonLabel=\"log in\">\r\n          <LoginForm\r\n            username={username}\r\n            password={password}\r\n            setUsername={setUsername}\r\n            setPassword={setPassword}\r\n            handleLogin={handleLogin}\r\n          />\r\n          \r\n        </Togglable>\r\n      }\r\n      {user && \r\n      <div>\r\n      <BlogForm/> \r\n      <h4>logged in as {user.username}<button onClick={handleLogout}>Log out</button></h4>\r\n      {blogs.map(blog => <Blog \r\n      key={blog.id} \r\n      blog={blog} \r\n      user={user.username} \r\n      addLike={addLike}\r\n      removeBlog={removeBlog}\r\n      />)}\r\n      </div>\r\n      }\r\n      <div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}