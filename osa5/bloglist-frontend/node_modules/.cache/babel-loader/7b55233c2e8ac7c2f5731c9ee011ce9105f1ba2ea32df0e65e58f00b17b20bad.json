{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/api/blogs';\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\nconst updateBlog = async (blogId, updatedData) => {\n  try {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const response = await axios.put(`/api/blogs/${blogId}`, updatedData, config);\n    // Käsittely vastauksen jälkeen\n    console.log(response.data); // Tulostaa palvelimen vastauksen datan\n  } catch (error) {\n    // Käsittely virheen tapauksessa\n    console.error('Virhe PUT-pyynnössä:', error);\n  }\n};\nconst save = async (id, blogObject) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.put(`${baseUrl}/${id}`, blogObject, config);\n  return response.data;\n};\nconst remove = async id => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\nlet token = null;\nconst setToken = newToken => {\n  token = `Bearer ${newToken}`;\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getAll,\n  setToken,\n  create,\n  updateBlog,\n  save,\n  remove\n};","map":{"version":3,"names":["axios","baseUrl","getAll","response","get","data","create","newObject","config","headers","Authorization","token","post","updateBlog","blogId","updatedData","put","console","log","error","save","id","blogObject","remove","delete","setToken","newToken"],"sources":["C:/FullStackMooc/osa5/bloglist-frontend/src/services/blogs.js"],"sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/blogs'\n\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst updateBlog = async (blogId, updatedData) => {\n  try {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const response = await axios.put(`/api/blogs/${blogId}`, updatedData, config);\n    // Käsittely vastauksen jälkeen\n    console.log(response.data) // Tulostaa palvelimen vastauksen datan\n  } catch (error) {\n    // Käsittely virheen tapauksessa\n    console.error('Virhe PUT-pyynnössä:', error)\n  }\n};\n\nconst save = async (id, blogObject) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.put(`${baseUrl}/${id}`, blogObject, config)\n  return response.data\n}\n\nconst remove = async id => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\n\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `Bearer ${newToken}`\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, setToken, create, updateBlog, save, remove }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,iCAAiC;AAGjD,MAAMC,MAAM,GAAG,YAAY;EACzB,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;EACzC,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMC,MAAM,GAAG,MAAMC,SAAS,IAAI;EAChC,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEC;IAAM;EAClC,CAAC;EAED,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACY,IAAI,CAACX,OAAO,EAAEM,SAAS,EAAEC,MAAM,CAAC;EAC7D,OAAOL,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMQ,UAAU,GAAG,OAAOC,MAAM,EAAEC,WAAW,KAAK;EAChD,IAAI;IACF,MAAMP,MAAM,GAAG;MACbC,OAAO,EAAE;QAAEC,aAAa,EAAEC;MAAM;IAClC,CAAC;IAED,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACgB,GAAG,CAAE,cAAaF,MAAO,EAAC,EAAEC,WAAW,EAAEP,MAAM,CAAC;IAC7E;IACAS,OAAO,CAACC,GAAG,CAACf,QAAQ,CAACE,IAAI,CAAC,EAAC;EAC7B,CAAC,CAAC,OAAOc,KAAK,EAAE;IACd;IACAF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C;AACF,CAAC;AAED,MAAMC,IAAI,GAAG,OAAOC,EAAE,EAAEC,UAAU,KAAK;EACrC,MAAMd,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEC;IAAM;EAClC,CAAC;EACD,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACgB,GAAG,CAAE,GAAEf,OAAQ,IAAGoB,EAAG,EAAC,EAAEC,UAAU,EAAEd,MAAM,CAAC;EACxE,OAAOL,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMkB,MAAM,GAAG,MAAMF,EAAE,IAAI;EACzB,MAAMb,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEC;IAAM;EAClC,CAAC;EACD,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACwB,MAAM,CAAE,GAAEvB,OAAQ,IAAGoB,EAAG,EAAC,EAAEb,MAAM,CAAC;EAC/D,OAAOL,QAAQ,CAACE,IAAI;AACtB,CAAC;AAID,IAAIM,KAAK,GAAG,IAAI;AAEhB,MAAMc,QAAQ,GAAGC,QAAQ,IAAI;EAC3Bf,KAAK,GAAI,UAASe,QAAS,EAAC;AAC9B,CAAC;;AAED;AACA,eAAe;EAAExB,MAAM;EAAEuB,QAAQ;EAAEnB,MAAM;EAAEO,UAAU;EAAEO,IAAI;EAAEG;AAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}