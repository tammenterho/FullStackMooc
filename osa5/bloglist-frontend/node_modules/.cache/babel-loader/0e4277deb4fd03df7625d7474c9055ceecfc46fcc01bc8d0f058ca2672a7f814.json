{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/api/blogs';\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\nconst updateBlog = async (blogId, updatedData) => {\n  try {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const response = await axios.put(`/api/blogs/${blogId}`, updatedData, config);\n    // Käsittely vastauksen jälkeen\n    console.log(response.data); // Tulostaa palvelimen vastauksen datan\n  } catch (error) {\n    // Käsittely virheen tapauksessa\n    console.error('Virhe PUT-pyynnössä:', error);\n  }\n};\nlet token = null;\nconst setToken = newToken => {\n  token = `Bearer ${newToken}`;\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getAll,\n  setToken,\n  create,\n  updateBlog\n};","map":{"version":3,"names":["axios","baseUrl","getAll","request","get","then","response","data","create","newObject","config","headers","Authorization","token","post","updateBlog","blogId","updatedData","put","console","log","error","setToken","newToken"],"sources":["C:/FullStackMooc/osa5/bloglist-frontend/src/services/blogs.js"],"sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/blogs';\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst updateBlog = async (blogId, updatedData) => {\r\n  try {\r\n    const config = {\r\n      headers: { Authorization: token },\r\n    };\r\n\r\n    const response = await axios.put(`/api/blogs/${blogId}`, updatedData, config);\r\n    // Käsittely vastauksen jälkeen\r\n    console.log(response.data); // Tulostaa palvelimen vastauksen datan\r\n  } catch (error) {\r\n    // Käsittely virheen tapauksessa\r\n    console.error('Virhe PUT-pyynnössä:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `Bearer ${newToken}`\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll, setToken, create, updateBlog }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,iCAAiC;AAGjD,MAAMC,MAAM,GAAG,MAAM;EACnB,MAAMC,OAAO,GAAGH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;EAClC,OAAOE,OAAO,CAACE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;AAChD,CAAC;AAED,MAAMC,MAAM,GAAG,MAAMC,SAAS,IAAI;EAChC,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEC;IAAM;EAClC,CAAC;EAED,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACc,IAAI,CAACb,OAAO,EAAEQ,SAAS,EAAEC,MAAM,CAAC;EAC7D,OAAOJ,QAAQ,CAACC,IAAI;AACtB,CAAC;AAED,MAAMQ,UAAU,GAAG,OAAOC,MAAM,EAAEC,WAAW,KAAK;EAChD,IAAI;IACF,MAAMP,MAAM,GAAG;MACbC,OAAO,EAAE;QAAEC,aAAa,EAAEC;MAAM;IAClC,CAAC;IAED,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACkB,GAAG,CAAE,cAAaF,MAAO,EAAC,EAAEC,WAAW,EAAEP,MAAM,CAAC;IAC7E;IACAS,OAAO,CAACC,GAAG,CAACd,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOc,KAAK,EAAE;IACd;IACAF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C;AACF,CAAC;AAID,IAAIR,KAAK,GAAG,IAAI;AAEhB,MAAMS,QAAQ,GAAGC,QAAQ,IAAI;EAC3BV,KAAK,GAAI,UAASU,QAAS,EAAC;AAC9B,CAAC;;AAED;AACA,eAAe;EAAErB,MAAM;EAAEoB,QAAQ;EAAEd,MAAM;EAAEO;AAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}