{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStackMooc\\\\osa6\\\\redux-anecdotes\\\\src\\\\components\\\\AnecdoteList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { voteAnecdote } from '../reducers/anecdoteReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport Notification from './components/Notification';\n\n//useSelector seuraa komponentin tilan muutoksia ja päivittää komponentin aina kun jokin muuttuu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnecdoteList = () => {\n  _s();\n  const dispatch = useDispatch(); //otetaan dispatch käyttöön, lähetetään action redux storeen\n  const filter = useSelector(state => state.filter); //useselector hakee filterin tilan reduxista\n  const anecdotes = useSelector(state =>\n  //sama anecdooteille\n  state.anecdotes.filter(anecdote =>\n  //hakee vain ne joiden sisältö vastaa filterin arvoa\n  anecdote.content.toLowerCase().includes(filter.toLowerCase()) //\n  ));\n\n  /*\r\n  const anecdotes = useSelector(function (state) {\r\n  return state.anecdotes.filter(function (anecdote) {\r\n      return anecdote.content.toLowerCase().includes(filter.toLowerCase());\r\n  });\r\n  });\r\n  */\n\n  const vote = (id, content) => {\n    console.log('vote', id);\n    dispatch(voteAnecdote(id));\n    dispatch(notify(content));\n    console.log(content);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [anecdotes.map(anecdote => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: anecdote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"has \", anecdote.votes, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => vote(anecdote.id, anecdote.content),\n          children: \"vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, anecdote.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(AnecdoteList, \"ywoLaVDl5JFlKKJm1ZtfVK1BYGM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = AnecdoteList;\nexport default AnecdoteList;\n\n/*\r\nuseSelector ottaa aina state ja palauttaa\r\n\r\nconst result = useSelector(selectorFunction);\r\n\r\nconst initialState = {\r\n  user: {\r\n    name: \"John Doe\",\r\n    age: 30,\r\n  },\r\n  todos: [\r\n    { id: 1, text: \"Do the laundry\", done: false },\r\n    { id: 2, text: \"Buy groceries\", done: true },\r\n  ],\r\n};\r\n\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MyComponent = () => {\r\n  const user = useSelector(state => state.user);\r\n  \r\n  // Voit käyttää user-muuttujaa komponentissa\r\n  console.log(user.name); // Tulostaa \"John Doe\"\r\n  console.log(user.age); // Tulostaa 30\r\n\r\n  return (\r\n    <div>\r\n      <p>Name: {user.name}</p>\r\n      <p>Age: {user.age}</p>\r\n    </div>\r\n  );\r\n};\r\nuseSelector-hooki hakee ainoastaan sen osan tilasta, \r\njota olet määritellyt selectorFunction-funktiossa. \r\nTämän ansiosta voit valikoida Reduxin tilasta vain ne tiedot, \r\njotka ovat kyseiselle komponentille tarpeellisia.\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"AnecdoteList\");","map":{"version":3,"names":["React","useSelector","useDispatch","voteAnecdote","notify","Notification","AnecdoteList","dispatch","filter","state","anecdotes","anecdote","content","toLowerCase","includes","vote","id","console","log","map","votes"],"sources":["C:/FullStackMooc/osa6/redux-anecdotes/src/components/AnecdoteList.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { voteAnecdote } from '../reducers/anecdoteReducer';\r\nimport { notify } from '../reducers/notificationReducer';\r\nimport Notification from './components/Notification';\r\n\r\n\r\n//useSelector seuraa komponentin tilan muutoksia ja päivittää komponentin aina kun jokin muuttuu\r\nconst AnecdoteList = () => {\r\n    const dispatch = useDispatch() //otetaan dispatch käyttöön, lähetetään action redux storeen\r\n    const filter = useSelector((state) => state.filter) //useselector hakee filterin tilan reduxista\r\n    const anecdotes = useSelector((state) => //sama anecdooteille\r\n        state.anecdotes.filter((anecdote) => //hakee vain ne joiden sisältö vastaa filterin arvoa\r\n            anecdote.content.toLowerCase().includes(filter.toLowerCase()) //\r\n        )\r\n    );\r\n\r\n    /*\r\n    const anecdotes = useSelector(function (state) {\r\n    return state.anecdotes.filter(function (anecdote) {\r\n        return anecdote.content.toLowerCase().includes(filter.toLowerCase());\r\n    });\r\n    });\r\n    */\r\n\r\n    const vote = (id, content) => {\r\n        console.log('vote', id);\r\n        dispatch(voteAnecdote(id));\r\n        dispatch(notify(content))\r\n        console.log(content)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {anecdotes.map((anecdote) => (\r\n                <div key={anecdote.id}>\r\n                    <div>{anecdote.content}</div>\r\n                    <div>\r\n                        has {anecdote.votes}\r\n                        <button onClick={() => vote(anecdote.id, anecdote.content)}>vote</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <Notification />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnecdoteList;\r\n\r\n/*\r\nuseSelector ottaa aina state ja palauttaa\r\n\r\nconst result = useSelector(selectorFunction);\r\n\r\nconst initialState = {\r\n  user: {\r\n    name: \"John Doe\",\r\n    age: 30,\r\n  },\r\n  todos: [\r\n    { id: 1, text: \"Do the laundry\", done: false },\r\n    { id: 2, text: \"Buy groceries\", done: true },\r\n  ],\r\n};\r\n\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MyComponent = () => {\r\n  const user = useSelector(state => state.user);\r\n  \r\n  // Voit käyttää user-muuttujaa komponentissa\r\n  console.log(user.name); // Tulostaa \"John Doe\"\r\n  console.log(user.age); // Tulostaa 30\r\n\r\n  return (\r\n    <div>\r\n      <p>Name: {user.name}</p>\r\n      <p>Age: {user.age}</p>\r\n    </div>\r\n  );\r\n};\r\nuseSelector-hooki hakee ainoastaan sen osan tilasta, \r\njota olet määritellyt selectorFunction-funktiossa. \r\nTämän ansiosta voit valikoida Reduxin tilasta vain ne tiedot, \r\njotka ovat kyseiselle komponentille tarpeellisia.\r\n\r\n*/"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,MAAM,QAAQ,iCAAiC;AACxD,OAAOC,YAAY,MAAM,2BAA2B;;AAGpD;AAAA;AACA,MAAMC,YAAY,GAAG,MAAM;EAAA;EACvB,MAAMC,QAAQ,GAAGL,WAAW,EAAE,EAAC;EAC/B,MAAMM,MAAM,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,MAAM,CAAC,EAAC;EACpD,MAAME,SAAS,GAAGT,WAAW,CAAEQ,KAAK;EAAK;EACrCA,KAAK,CAACC,SAAS,CAACF,MAAM,CAAEG,QAAQ;EAAK;EACjCA,QAAQ,CAACC,OAAO,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACN,MAAM,CAACK,WAAW,EAAE,CAAC,CAAC;EAAA,CACjE,CACJ;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;;EAEI,MAAME,IAAI,GAAG,CAACC,EAAE,EAAEJ,OAAO,KAAK;IAC1BK,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,EAAE,CAAC;IACvBT,QAAQ,CAACJ,YAAY,CAACa,EAAE,CAAC,CAAC;IAC1BT,QAAQ,CAACH,MAAM,CAACQ,OAAO,CAAC,CAAC;IACzBK,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;EACxB,CAAC;EAED,oBACI;IAAA,WACKF,SAAS,CAACS,GAAG,CAAER,QAAQ,iBACpB;MAAA,wBACI;QAAA,UAAMA,QAAQ,CAACC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAO,eAC7B;QAAA,WAAK,MACG,EAACD,QAAQ,CAACS,KAAK,eACnB;UAAQ,OAAO,EAAE,MAAML,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAEL,QAAQ,CAACC,OAAO,CAAE;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACvE;IAAA,GALAD,QAAQ,CAACK,EAAE;MAAA;MAAA;MAAA;IAAA,QAOxB,CAAC,eACF,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACd;AAEd,CAAC;AAAC,GAtCIV,YAAY;EAAA,QACGJ,WAAW,EACbD,WAAW,EACRA,WAAW;AAAA;AAAA,KAH3BK,YAAY;AAwClB,eAAeA,YAAY;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}