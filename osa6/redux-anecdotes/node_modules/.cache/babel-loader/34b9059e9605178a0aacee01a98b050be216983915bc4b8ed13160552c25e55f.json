{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport anecdotesService from \"../services/anecdotes\";\nconst getId = () => (100000 * Math.random()).toFixed(0);\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: [],\n  reducers: {\n    voteAnecdote(state, action) {\n      const votedAnecdote = action.payload;\n      const id = votedAnecdote.id;\n      const anecdoteToChange = state.find(a => a.id === id);\n      if (anecdoteToChange) {\n        anecdoteToChange.votes += 1;\n      }\n    },\n    setAnecdotes(state, action) {\n      return action.payload;\n    },\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    }\n  }\n});\nexport const {\n  appendAnecdote,\n  voteAnecdote,\n  setAnecdotes\n} = anecdoteSlice.actions;\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdotesService.getAll();\n    dispatch(setAnecdotes(anecdotes));\n  };\n};\nexport const createAnecdote = content => {\n  return async dispatch => {\n    const newAnecdote = await anecdotesService.createNew(content);\n    dispatch(appendAnecdote(newAnecdote));\n  };\n};\nexport const updateAnecdote = content => {\n  return async dispatch => {\n    const updatedAnecdote = {\n      ...content,\n      votes: content.votes + 1\n    };\n    const updated = await anecdotesService.update(content.id, updatedAnecdote);\n    dispatch(voteAnecdote(updated));\n  };\n};\nexport default anecdoteSlice.reducer;","map":{"version":3,"names":["createSlice","anecdotesService","getId","Math","random","toFixed","anecdoteSlice","name","initialState","reducers","voteAnecdote","state","action","votedAnecdote","payload","id","anecdoteToChange","find","a","votes","setAnecdotes","appendAnecdote","push","actions","initializeAnecdotes","dispatch","anecdotes","getAll","createAnecdote","content","newAnecdote","createNew","updateAnecdote","updatedAnecdote","updated","update","reducer"],"sources":["C:/FullStackMooc/osa6/redux-anecdotes/src/reducers/anecdoteReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\nimport anecdotesService from \"../services/anecdotes\"\r\n\r\n\r\n\r\n\r\nconst getId = () => (100000 * Math.random()).toFixed(0)\r\n\r\n\r\nconst anecdoteSlice = createSlice({\r\n  name: 'anecdotes',\r\n  initialState: [],\r\n  reducers: {\r\n    voteAnecdote(state, action) {\r\n      const votedAnecdote = action.payload\r\n      const id = votedAnecdote.id\r\n      const anecdoteToChange = state.find(a => a.id === id)\r\n      if (anecdoteToChange) {\r\n        anecdoteToChange.votes += 1;\r\n      }\r\n    },\r\n\r\n    setAnecdotes(state, action) {\r\n      return action.payload\r\n    },\r\n    appendAnecdote(state, action) {\r\n      state.push(action.payload)\r\n    }\r\n  }\r\n})\r\n\r\nexport const { appendAnecdote, voteAnecdote, setAnecdotes } = anecdoteSlice.actions\r\n\r\nexport const initializeAnecdotes = () => {\r\n  return async dispatch => {\r\n    const anecdotes = await anecdotesService.getAll()\r\n    dispatch(setAnecdotes(anecdotes))\r\n  }\r\n}\r\n\r\nexport const createAnecdote = content => {\r\n  return async dispatch => {\r\n    const newAnecdote = await anecdotesService.createNew(content)\r\n    dispatch(appendAnecdote(newAnecdote))\r\n  }\r\n}\r\n\r\nexport const updateAnecdote = content => {\r\n  return async dispatch => {\r\n    const updatedAnecdote = {\r\n      ...content,\r\n      votes: content.votes + 1\r\n    }\r\n    const updated = await anecdotesService.update(content.id, updatedAnecdote)\r\n    dispatch(voteAnecdote(updated))\r\n  }\r\n}\r\n\r\nexport default anecdoteSlice.reducer\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,gBAAgB,MAAM,uBAAuB;AAKpD,MAAMC,KAAK,GAAG,MAAM,CAAC,MAAM,GAAGC,IAAI,CAACC,MAAM,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAC;AAGvD,MAAMC,aAAa,GAAGN,WAAW,CAAC;EAChCO,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,YAAY,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC1B,MAAMC,aAAa,GAAGD,MAAM,CAACE,OAAO;MACpC,MAAMC,EAAE,GAAGF,aAAa,CAACE,EAAE;MAC3B,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;MACrD,IAAIC,gBAAgB,EAAE;QACpBA,gBAAgB,CAACG,KAAK,IAAI,CAAC;MAC7B;IACF,CAAC;IAEDC,YAAY,CAACT,KAAK,EAAEC,MAAM,EAAE;MAC1B,OAAOA,MAAM,CAACE,OAAO;IACvB,CAAC;IACDO,cAAc,CAACV,KAAK,EAAEC,MAAM,EAAE;MAC5BD,KAAK,CAACW,IAAI,CAACV,MAAM,CAACE,OAAO,CAAC;IAC5B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEO,cAAc;EAAEX,YAAY;EAAEU;AAAa,CAAC,GAAGd,aAAa,CAACiB,OAAO;AAEnF,OAAO,MAAMC,mBAAmB,GAAG,MAAM;EACvC,OAAO,MAAMC,QAAQ,IAAI;IACvB,MAAMC,SAAS,GAAG,MAAMzB,gBAAgB,CAAC0B,MAAM,EAAE;IACjDF,QAAQ,CAACL,YAAY,CAACM,SAAS,CAAC,CAAC;EACnC,CAAC;AACH,CAAC;AAED,OAAO,MAAME,cAAc,GAAGC,OAAO,IAAI;EACvC,OAAO,MAAMJ,QAAQ,IAAI;IACvB,MAAMK,WAAW,GAAG,MAAM7B,gBAAgB,CAAC8B,SAAS,CAACF,OAAO,CAAC;IAC7DJ,QAAQ,CAACJ,cAAc,CAACS,WAAW,CAAC,CAAC;EACvC,CAAC;AACH,CAAC;AAED,OAAO,MAAME,cAAc,GAAGH,OAAO,IAAI;EACvC,OAAO,MAAMJ,QAAQ,IAAI;IACvB,MAAMQ,eAAe,GAAG;MACtB,GAAGJ,OAAO;MACVV,KAAK,EAAEU,OAAO,CAACV,KAAK,GAAG;IACzB,CAAC;IACD,MAAMe,OAAO,GAAG,MAAMjC,gBAAgB,CAACkC,MAAM,CAACN,OAAO,CAACd,EAAE,EAAEkB,eAAe,CAAC;IAC1ER,QAAQ,CAACf,YAAY,CAACwB,OAAO,CAAC,CAAC;EACjC,CAAC;AACH,CAAC;AAED,eAAe5B,aAAa,CAAC8B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}