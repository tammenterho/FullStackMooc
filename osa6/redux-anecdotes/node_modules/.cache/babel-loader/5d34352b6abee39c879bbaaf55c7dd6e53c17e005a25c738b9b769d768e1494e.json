{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStackMooc\\\\osa6\\\\redux-anecdotes\\\\src\\\\components\\\\AnecdoteList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAnecdotes, voteAnecdote } from '../reducers/anecdoteReducer';\nimport { clearNotification, notify } from '../reducers/notificationReducer';\nimport Notification from '../components/Notification';\nimport anecdotes from '../services/anecdotes';\n\n//useSelector seuraa komponentin tilan muutoksia ja päivittää komponentin aina kun jokin muuttuu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnecdoteList = () => {\n  _s();\n  /*const dispatch = useDispatch() //otetaan dispatch käyttöön, lähetetään action redux storeen\r\n  const filter = useSelector((state) => state.filter) //useselector hakee filterin tilan reduxista\r\n  const anecdotes = useSelector((state) =>\r\n      state.anecdotes\r\n          .filter((anecdote) =>\r\n              anecdote.content.toLowerCase().includes(filter.toLowerCase())\r\n          )\r\n          .sort((a, b) => b.votes - a.votes) // Järjestetään votesin mukaan laskevassa järjestyksessä\r\n  );\r\n  */\n  const dispatch = useDispatch();\n  useEffect(() => {\n    anecdotes.getAll().then(anecdotes => dispatch(setAnecdotes(anecdotes)));\n  }, []);\n  /*\r\n  const anecdotes = useSelector(function (state) {\r\n  return state.anecdotes.filter(function (anecdote) {\r\n      return anecdote.content.toLowerCase().includes(filter.toLowerCase());\r\n  });\r\n  });\r\n  */\n\n  const vote = (id, content) => {\n    console.log('vote', id);\n    dispatch(voteAnecdote(id));\n    dispatch(notify('voted: ' + content, id));\n    // Wait for 5 seconds using async/await and setTimeout\n    const wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n    const clearNotificationAfterDelay = async () => {\n      await wait(5000); // Wait for 5 seconds (5000 milliseconds)\n      dispatch(clearNotification());\n    };\n    clearNotificationAfterDelay();\n    console.log(content);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [anecdotes.map(anecdote => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: anecdote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"has \", anecdote.votes, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => vote(anecdote.id, anecdote.content),\n          children: \"vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, anecdote.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(AnecdoteList, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = AnecdoteList;\nexport default AnecdoteList;\n\n/*\r\nuseSelector ottaa aina state ja palauttaa\r\n\r\nconst result = useSelector(selectorFunction);\r\n\r\nconst initialState = {\r\n  user: {\r\n    name: \"John Doe\",\r\n    age: 30,\r\n  },\r\n  todos: [\r\n    { id: 1, text: \"Do the laundry\", done: false },\r\n    { id: 2, text: \"Buy groceries\", done: true },\r\n  ],\r\n};\r\n\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MyComponent = () => {\r\n  const user = useSelector(state => state.user);\r\n  \r\n  // Voit käyttää user-muuttujaa komponentissa\r\n  console.log(user.name); // Tulostaa \"John Doe\"\r\n  console.log(user.age); // Tulostaa 30\r\n\r\n  return (\r\n    <div>\r\n      <p>Name: {user.name}</p>\r\n      <p>Age: {user.age}</p>\r\n    </div>\r\n  );\r\n};\r\nuseSelector-hooki hakee ainoastaan sen osan tilasta, \r\njota olet määritellyt selectorFunction-funktiossa. \r\nTämän ansiosta voit valikoida Reduxin tilasta vain ne tiedot, \r\njotka ovat kyseiselle komponentille tarpeellisia.\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"AnecdoteList\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","setAnecdotes","voteAnecdote","clearNotification","notify","Notification","anecdotes","AnecdoteList","dispatch","getAll","then","vote","id","content","console","log","wait","ms","Promise","resolve","setTimeout","clearNotificationAfterDelay","map","anecdote","votes"],"sources":["C:/FullStackMooc/osa6/redux-anecdotes/src/components/AnecdoteList.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setAnecdotes, voteAnecdote } from '../reducers/anecdoteReducer';\r\nimport { clearNotification, notify } from '../reducers/notificationReducer';\r\nimport Notification from '../components/Notification'\r\nimport anecdotes from '../services/anecdotes';\r\n\r\n\r\n\r\n//useSelector seuraa komponentin tilan muutoksia ja päivittää komponentin aina kun jokin muuttuu\r\nconst AnecdoteList = () => {\r\n    /*const dispatch = useDispatch() //otetaan dispatch käyttöön, lähetetään action redux storeen\r\n    const filter = useSelector((state) => state.filter) //useselector hakee filterin tilan reduxista\r\n    const anecdotes = useSelector((state) =>\r\n        state.anecdotes\r\n            .filter((anecdote) =>\r\n                anecdote.content.toLowerCase().includes(filter.toLowerCase())\r\n            )\r\n            .sort((a, b) => b.votes - a.votes) // Järjestetään votesin mukaan laskevassa järjestyksessä\r\n    );\r\n*/\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        anecdotes\r\n            .getAll().then(anecdotes => dispatch(setAnecdotes(anecdotes)))\r\n    }, [])\r\n    /*\r\n    const anecdotes = useSelector(function (state) {\r\n    return state.anecdotes.filter(function (anecdote) {\r\n        return anecdote.content.toLowerCase().includes(filter.toLowerCase());\r\n    });\r\n    });\r\n    */\r\n\r\n    const vote = (id, content) => {\r\n        console.log('vote', id);\r\n        dispatch(voteAnecdote(id));\r\n        dispatch(notify('voted: ' + content, id))\r\n        // Wait for 5 seconds using async/await and setTimeout\r\n        const wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n        const clearNotificationAfterDelay = async () => {\r\n            await wait(5000); // Wait for 5 seconds (5000 milliseconds)\r\n            dispatch(clearNotification());\r\n        };\r\n        clearNotificationAfterDelay();\r\n\r\n        console.log(content);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {anecdotes.map((anecdote) => (\r\n                <div key={anecdote.id}>\r\n                    <div>{anecdote.content}</div>\r\n                    <div>\r\n                        has {anecdote.votes}\r\n                        <button onClick={() => vote(anecdote.id, anecdote.content)}>vote</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <Notification />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnecdoteList;\r\n\r\n/*\r\nuseSelector ottaa aina state ja palauttaa\r\n\r\nconst result = useSelector(selectorFunction);\r\n\r\nconst initialState = {\r\n  user: {\r\n    name: \"John Doe\",\r\n    age: 30,\r\n  },\r\n  todos: [\r\n    { id: 1, text: \"Do the laundry\", done: false },\r\n    { id: 2, text: \"Buy groceries\", done: true },\r\n  ],\r\n};\r\n\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MyComponent = () => {\r\n  const user = useSelector(state => state.user);\r\n  \r\n  // Voit käyttää user-muuttujaa komponentissa\r\n  console.log(user.name); // Tulostaa \"John Doe\"\r\n  console.log(user.age); // Tulostaa 30\r\n\r\n  return (\r\n    <div>\r\n      <p>Name: {user.name}</p>\r\n      <p>Age: {user.age}</p>\r\n    </div>\r\n  );\r\n};\r\nuseSelector-hooki hakee ainoastaan sen osan tilasta, \r\njota olet määritellyt selectorFunction-funktiossa. \r\nTämän ansiosta voit valikoida Reduxin tilasta vain ne tiedot, \r\njotka ovat kyseiselle komponentille tarpeellisia.\r\n\r\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,EAAEC,YAAY,QAAQ,6BAA6B;AACxE,SAASC,iBAAiB,EAAEC,MAAM,QAAQ,iCAAiC;AAC3E,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,SAAS,MAAM,uBAAuB;;AAI7C;AAAA;AACA,MAAMC,YAAY,GAAG,MAAM;EAAA;EACvB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9BF,SAAS,CAAC,MAAM;IACZQ,SAAS,CACJG,MAAM,EAAE,CAACC,IAAI,CAACJ,SAAS,IAAIE,QAAQ,CAACP,YAAY,CAACK,SAAS,CAAC,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EACN;AACJ;AACA;AACA;AACA;AACA;AACA;;EAEI,MAAMK,IAAI,GAAG,CAACC,EAAE,EAAEC,OAAO,KAAK;IAC1BC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,EAAE,CAAC;IACvBJ,QAAQ,CAACN,YAAY,CAACU,EAAE,CAAC,CAAC;IAC1BJ,QAAQ,CAACJ,MAAM,CAAC,SAAS,GAAGS,OAAO,EAAED,EAAE,CAAC,CAAC;IACzC;IACA,MAAMI,IAAI,GAAIC,EAAE,IAAK,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;IACtE,MAAMI,2BAA2B,GAAG,YAAY;MAC5C,MAAML,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;MAClBR,QAAQ,CAACL,iBAAiB,EAAE,CAAC;IACjC,CAAC;IACDkB,2BAA2B,EAAE;IAE7BP,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACxB,CAAC;EAED,oBACI;IAAA,WACKP,SAAS,CAACgB,GAAG,CAAEC,QAAQ,iBACpB;MAAA,wBACI;QAAA,UAAMA,QAAQ,CAACV;MAAO;QAAA;QAAA;QAAA;MAAA,QAAO,eAC7B;QAAA,WAAK,MACG,EAACU,QAAQ,CAACC,KAAK,eACnB;UAAQ,OAAO,EAAE,MAAMb,IAAI,CAACY,QAAQ,CAACX,EAAE,EAAEW,QAAQ,CAACV,OAAO,CAAE;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACvE;IAAA,GALAU,QAAQ,CAACX,EAAE;MAAA;MAAA;MAAA;IAAA,QAOxB,CAAC,eACF,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACd;AAEd,CAAC;AAAC,GArDIL,YAAY;EAAA,QAWGP,WAAW;AAAA;AAAA,KAX1BO,YAAY;AAuDlB,eAAeA,YAAY;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}